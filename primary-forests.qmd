---
title: Explore
author: Otho Mantegazza
date: today
editor_options: 
  chunk_output_type: console
---

# Setup

```{r packages}
library(tidyverse)
library(sf)
library(leaflet)
library(janitor)
library(units) # needed to plot forest sizes
library(spData) # needed to assign state to forest shapes
# library(lwgeom)
```

```{r homebrew-path}
old_path <- 
  Sys.getenv("PATH")

Sys.setenv(
  PATH = paste(old_path, "/opt/homebrew/bin:/opt/homebrew/sbin", sep = ":")
  )

sf_use_s2(FALSE)
```

# Read Shapefile

Provided by Francesco Sabatini.

```{r data}
db_polygons <- 
  'data/PrimaryForest_EU_OA_WGS84_polygons/'

forests_polygons <-
  read_sf(db_polygons) %>%
  clean_names()

db_points <- 
  'data/PrimaryForest_EU_OA_WGS84_points/'

forests_points <-
  read_sf(db_points) %>%
  clean_names()

forests <-
  bind_rows(
    forests_polygons,
    forests_points
  )

```

# Read Metadata

```{r}
threats <-
  read_csv('data/threats.csv')
#   arrange(code) %>%
#   pull(threat)
# disturbance <- 
#   read_csv('data/disturbance.csv') %>%
#   arrange(code) %>%
#   pull(disturbance)
forest_type <- 
  read_csv('data/forest-type.csv') %>% 
  arrange(code)
```

# Definition

Primary Forest:

> "naturally regenerated forest of native tree species, where there are no clearly visible indications of human activities and the ecological processes are not significantly disturbed."

# Source

|          |                                                               |
|----------|---------------------------------------------------------------|
| Article  | <https://www.nature.com/articles/s41597-021-00988-7>          |
| Data     | <https://doi.org/10.6084/m9.figshare.13194095.v1>             |
| Original | <https://www.nature.com/articles/s41597-021-00988-7/tables/4> |
| Metadata | <https://www.nature.com/articles/s41597-021-00988-7/tables/5> |

# Recode categorical variables

```{r}
forests <- 
  forests %>%
  left_join(forest_type, by = c('forest_typ' = 'code')) %>%
  rename(forest_type_code = forest_typ) %>% 
  left_join(threats, by = c('threat_1' = 'code'))
```


# Areas

The database records `r nrow(forests)` patches of primary forest in the european continent.

They are divided geographically in:

```{r}
forests$area_m2 <- forests %>% st_area()
```

```{r}
forest_data <- forests %>% as_tibble() %>% select(-geometry)
```

```{r}
forest_data %>% count(dominant_t, sort = T)
```

```{r}
forests %>% 
  ggplot() +
  aes(y = area_m2,
      x = area_ha) +
  geom_point()
```

## Join with countries

```{r}
forests <-
  st_join(forests, world["name_long"]) %>% rename(country = name_long)
```

## Location

```{r}
forest_data %>% 
  group_by(location) %>% 
  summarise(area_m2 = area_m2 %>% sum(na.rm = T)) %>% 
  arrange(desc(area_m2))
```

## Species

```{r}
forest_data %>% 
  group_by(dominant_1) %>% 
  summarise(area_m2 = area_m2 %>% sum(na.rm = T)) %>% 
  arrange(desc(area_m2))


forest_data %>% 
  group_by(dominant_t, dominant_1, dominant_2) %>% 
  summarise(area_m2 = area_m2 %>% sum(na.rm = T)) %>% 
  arrange(desc(area_m2)) %>% 
  view()

```

# Visualiza on MAP

```{r}
factpal <-
  colorFactor(
    topo.colors(
      length(unique(forests$country))
    ),
    forests$country
  )

leaflet(
  forests %>% 
    filter(st_geometry_type(geometry) == 'MULTIPOLYGON')
) %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addPolygons(stroke = TRUE, fillOpacity = 1, color = ~factpal(country))

leaflet(
  forests %>% 
    filter(st_geometry_type(geometry) == 'POINT') %>% view()
) %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addCircles()
```

# Group by forest name

```{r}
cols_of_interest <- 
  c(
    'naturalnes',
    'dominant_t',
    'threat_1',
    'protected',
    'threat',
    'forest_type'
  )


forests %>% 
  as_tibble() %>%
  group_by(forest_nam) %>% 
  summarise(
    across(
      .cols = all_of(cols_of_interest),
      .fns = ~length(unique(.))
    )) %>% 
  filter(
    if_any(
      .cols = all_of(cols_of_interest),
      .fns = ~ . > 1
    )
  ) %>% view()


forests_by_name <- 
  forests %>% 
  group_by(forest_nam) %>% 
  summarise(
    across(
      .cols = all_of(cols_of_interest),
      .fns = ~paste(
        unique(as.character(.)),
        collapse = ' - ')
    )
  ) 
```


# Summaries



```{r}
forest_data %>% 
  count(dominant_t, forest_type) %>% view()
```

```{r}
forest_data %>% 
  count(forest_type, threat) %>% view()
```

