---
title: Explore
author: Otho Mantegazza
date: today
editor_options: 
  chunk_output_type: console
---

```{r packages}
library(tidyverse)
library(mdbr)
library(sf)
library(leaflet)
library(janitor)
library(lwgeom)
library(units)
library(spData)
```

```{r}
old_path <- Sys.getenv("PATH")
Sys.setenv(PATH = paste(old_path, "/opt/homebrew/bin:/opt/homebrew/sbin", sep = ":"))
```

# Read Shapefile

Provided by Francesco Sabatini.

```{r data}
sf_use_s2(FALSE)
db <- 'data/PrimaryForest_EU_OA_WGS84_polygons/'
forests <- read_sf(db) %>% clean_names()
# forest_data <- forests %>% as_tibble() %>% select(-geometry)
```

```{r}
# mdb_forests <- 'data/EPFD_v2.0.mdb'
```

```{r}
# mdbr::mdb_tables(file = mdb_forests)
```

```{r}
# forest_esri <- 
#   read_mdb(
#     file = mdb_forests,
#     table = "EU_PrimaryForests_Polygons_OA_v20"
#   ) %>% 
#   janitor::clean_names() %>% 
#   select(-shape)
```

# Read Metadata

```{r}
threats <-
  read_csv('data/threats.csv')
#   arrange(code) %>%
#   pull(threat)
# disturbance <- 
#   read_csv('data/disturbance.csv') %>%
#   arrange(code) %>%
#   pull(disturbance)
forest_type <- 
  read_csv('data/forest-type.csv') %>% 
  arrange(code)
```

```{r}
# forests_coded <- 
#   forest_esri %>% 
#   mutate(
#     across(
#       .cols = c(threat_1, threat_2),
#       .fns = ~recode(., !!!threats)
#     ),
#     across(
#       .cols = c(forest_type1, forest_type2),
#       .fns = ~recode(., !!!forest_type)
#     )
#   )
```

```{r}
# forests_coded %>%  write_csv('data/forest-coded-no-shapes.csv')
```

```{r}
# forests_coded %>% drop_na(dominant_tree_species1)
# forests_coded %>% count(dominant_tree_species1, sort = T)
```

```{r}
# forests_coded %>% drop_na(dominant_tree_species3)
```

```{r}
# forests_coded %>% drop_na(threat_1)
# forests_coded %>% count(threat_1, sort = T)
```

```{r}
# forests_coded %>% drop_na(last_disturbance1_type)
# forests_coded %>% count(last_disturbance1_type, sort = T)
```

```{r}
# forests_coded %>% drop_na(forest_type1)
# forests_coded %>% count(forest_type1, sort = T)
```


# Definition

Primary Forest:

> "naturally regenerated forest of native tree species, where there are no clearly visible indications of human activities and the ecological processes are not significantly disturbed."

# Source

|          |                                                               |
|----------|---------------------------------------------------------------|
| Article  | <https://www.nature.com/articles/s41597-021-00988-7>          |
| Data     | <https://doi.org/10.6084/m9.figshare.13194095.v1>             |
| Original | <https://www.nature.com/articles/s41597-021-00988-7/tables/4> |
| Metadata | <https://www.nature.com/articles/s41597-021-00988-7/tables/5> |

# Recode categorical variables

```{r}
forests <- 
  forests %>%
  left_join(forest_type, by = c('forest_typ' = 'code')) %>%
  rename(forest_type_code = forest_typ) %>% 
  left_join(threats, by = c('threat_1' = 'code'))
  # mutate(
  #   across(
  #     .cols = c(forest_typ),
  #     .fns = ~recode(., !!!forest_type$forest_type)
  #   )
  # ) %>% 
  # pull(forest_typ)
```


# Areas

The database records `r nrow(forests)` patches of primary forest in the european continent.

They are divided geographically in:

```{r}
forests$area_m2 <- forests %>% st_area()
```

```{r}
forest_data <- forests %>% as_tibble() %>% select(-geometry)
```

```{r}
forest_data %>% count(dominant_t, sort = T)
```

```{r}
forests %>% 
  ggplot() +
  aes(y = area_m2,
      x = area_ha) +
  geom_point()
```

## Join with countries

```{r}
forests <- st_join(forests, world["name_long"]) %>% rename(country = name_long)
```

```{r}
# ukraine <- 
#   forests %>% 
#   filter(co)
```

## Location

```{r}
forest_data %>% 
  group_by(location) %>% 
  summarise(area_m2 = area_m2 %>% sum(na.rm = T)) %>% 
  arrange(desc(area_m2))
```

## Species

```{r}
forest_data %>% 
  group_by(dominant_1) %>% 
  summarise(area_m2 = area_m2 %>% sum(na.rm = T)) %>% 
  arrange(desc(area_m2))


forest_data %>% 
  group_by(dominant_t, dominant_1, dominant_2) %>% 
  summarise(area_m2 = area_m2 %>% sum(na.rm = T)) %>% 
  arrange(desc(area_m2)) %>% 
  view()

```

```{r}
factpal <- colorFactor(topo.colors(length(unique(forests$country))), forests$country)

leaflet(forests) %>%
  addProviderTiles(providers$CartoDB.Positron) %>%
  addPolygons(stroke = TRUE, fillOpacity = 1, color = ~factpal(country))
```

```{r}
# forest_lite <- forests %>% st_union()
```

```{r}

```

```{r}
forest_data %>% 
  count(dominant_t, forest_type) %>% view()
```

```{r}
forest_data %>% 
  count(forest_type, threat) %>% view()
```

